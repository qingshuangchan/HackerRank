using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;

class Solution {

    // Complete the sockMerchant function below.
    static int sockMerchant(int n, int[] ar) {

        int result = 0;
        
        //Dictionary<Key, Value>
	      Dictionary<int, int> socks = new Dictionary<int, int>();

        foreach(int item in ar)
        {
		        if(!socks.ContainsKey(item))
          	{
            		socks.Add(item, 1);
          	}
          	else
          	{
			          //Increase value of item by 1
            		socks[item] += 1;
          	}          
          	//Console.WriteLine(item + " " + socks[item]);
        }
        
        foreach(int item in socks.Keys)
        {
          	//Item is able to form a complete pair of socks at minimum
		        if (socks[item] > 1)
          	{
            		//Get number of pairs of socks
			          result += socks[item] / 2;
          	}
        }      
        return result;
    }

    static void Main(string[] args) {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        int n = Convert.ToInt32(Console.ReadLine());

        //string[] ar_temp = Console.ReadLine().Split(' ');
        //int[] ar = Array.ConvertAll(ar_temp,Int32.Parse);

        int[] ar = Array.ConvertAll(Console.ReadLine().Split(' '), arTemp => Convert.ToInt32(arTemp));
        int result = sockMerchant(n, ar);

        textWriter.WriteLine(result);

        textWriter.Flush();
        textWriter.Close();
    }
}
